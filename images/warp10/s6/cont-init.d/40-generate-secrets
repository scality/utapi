#!/usr/bin/with-contenv sh

set -eu

JAVA="/usr/bin/java"
WARP10_JAR=${WARP10_HOME}/bin/warp10-${WARP10_VERSION}.jar
WARP10_CP="${WARP10_HOME}/etc:${WARP10_JAR}:${WARP10_HOME}/lib/*"

WARP10_CONFIG_DIR="$WARP10_DATA_DIR/conf"
INITIAL_TOKENS="$WARP10_CONFIG_DIR/initial.token"

if [ ! -f "$INITIAL_TOKENS" ]; then
    CONFIG_FILES="$(find ${WARP10_CONFIG_DIR} -not -path "*/\.*" -name "*.conf" | sort | tr '\n' ' ' 2> /dev/null)"

    # Look for a set token secret and use it for generation
    secret=`${JAVA} -cp ${WARP10_CP} io.warp10.WarpConfig ${CONFIG_FILES} 'token.secret' | grep 'token.secret' | sed -e 's/^.*=//'`
    if [[ "${secret}"  != "null" ]]; then
        sed -i.bak -e "s|^{{secret}}|'"${secret}"'|" ${WARP10_HOME}/templates/warp10-tokengen.mc2
    else
        sed -i.bak -e "s|^{{secret}}||" ${WARP10_HOME}/templates/warp10-tokengen.mc2
    fi
    rm ${WARP10_HOME}/templates/warp10-tokengen.mc2.bak

    # Generate read/write tokens valid for a period of 100 years. We use 'io.warp10.bootstrap' as application name.
    ${JAVA} -cp ${WARP10_JAR} io.warp10.worf.TokenGen ${CONFIG_FILES} ${WARP10_HOME}/templates/warp10-tokengen.mc2 $INITIAL_TOKENS
    sed -i.bak 's/^.\{1\}//;$ s/.$//' $INITIAL_TOKENS # Remove first and last character
    rm "${INITIAL_TOKENS}.bak"
fi
