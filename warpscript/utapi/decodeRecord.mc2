{
  'name' 'decodeRecord'
  'desc'
  <'
Decodes a hex formatted byte string into a internal UTAPI record using protobuf
  '>
  'sig' [ [ [ 'e:string'  ] [ 'r:MAP' ] ] ] // Signature
  'params' {
    // Signature params description
    'e' 'Encoded record in hex format'
    'r' 'Decoded record'
  }
  'examples' [
    <'
    '081e101e181e20002a0d0a097075744f626a656374101e' @/utapi/decodeRecord
    '>
  ]
} 'info' STORE

<'
syntax = "proto3";
message Record {
  int64 sizeD = 1;
  int64 objD = 2;
  int64 inB = 3;
  int64 outB = 4;
  map<string, int64> ops = 5;
}
'>
PROTOC 'proto' STORE

<%
  !$info INFO
  SAVE 'context' STORE
  <%
    'iso8859-1' ->BYTES
    !$proto 'Record' PB->
  %>
  <% // catch any exception
    RETHROW
  %>
  <% // finally, restore the context
    $context RESTORE
  %> TRY
%>
'macro' STORE

// Unit tests
'081e101e181e20002a0d0a097075744f626a656374101e' HEX-> 'iso8859-1' BYTES->
@macro
{ 'outB' 0 'ops' { 'putObject' 30 } 'sizeD' 30 'inB' 30 'objD' 30 } == ASSERT

$macro
