---
version: 0.2

branches:
  default:
    stage: pre-merge

models:
  - Git: &clone
      name: Pull repo
      repourl: '%(prop:git_reference)s'
      shallow: True
      retryFetch: True
      haltOnFailure: True
  - Workspace: &workspace
      type: kube_pod
      path: eve/workers/pod.yml
      images:
        aggressor: eve/workers/unit_and_feature_tests
        warp10:
          context: '.'
          dockerfile: 'images/warp10/Dockerfile'
        vault: eve/workers/mocks/vault
  - Install: &install
      name: install node modules
      command: yarn install --frozen-lockfile
      haltOnFailure: True
  - Upload: &upload_artifacts
      source: /artifacts
      urls:
        - "*"


stages:
  pre-merge:
    worker:
      type: local
    steps:
    - MasterShellCommand:
        name: Replace upstream image with `-ci` variant
        command: "sed -i '/^FROM/ s/$/-ci/' %(prop:master_builddir)s/build/images/warp10/Dockerfile"
    - TriggerStages:
        name: trigger all the tests
        stage_names:
        - linting-coverage
        - run-unit-tests
        - run-client-tests
        - run-server-tests
        - run-cron-tests
        - run-interval-tests
        - run-v2-functional-tests
  linting-coverage:
    worker: *workspace
    steps:
      - Git: *clone
      - ShellCommand: *install
      - ShellCommand:
          name: run static analysis tools on markdown
          command: yarn run lint_md
      - ShellCommand:
          name: run static analysis tools on code
          command: yarn run lint
  run-unit-tests:
    worker: *workspace
    steps:
      - Git: *clone
      - ShellCommand: *install
      - ShellCommand:
          name: run unit tests
          command: yarn test
  run-client-tests:
    worker: *workspace
    steps:
      - Git: *clone
      - ShellCommand: *install
      - ShellCommand:
          name: run client tests
          command: bash ./eve/workers/unit_and_feature_tests/run_ft_tests.bash false ft_test:client
  run-server-tests:
    worker: *workspace
    steps:
      - Git: *clone
      - ShellCommand: *install
      - ShellCommand:
          name: run server tests
          command: bash ./eve/workers/unit_and_feature_tests/run_ft_tests.bash false ft_test:server
  run-cron-tests:
    worker: *workspace
    steps:
      - Git: *clone
      - ShellCommand: *install
      - ShellCommand:
          name: run cron tests
          command: bash ./eve/workers/unit_and_feature_tests/run_ft_tests.bash false ft_test:cron
  run-interval-tests:
    worker: *workspace
    steps:
      - Git: *clone
      - ShellCommand: *install
      - ShellCommand:
          name: run interval tests
          command: bash ./eve/workers/unit_and_feature_tests/run_ft_tests.bash true ft_test:interval
  run-v2-functional-tests:
    worker:
      << : *workspace
      vars:
        vault: enabled
    steps:
      - Git: *clone
      - ShellCommand: *install
      - ShellCommand:
          name: Wait for Warp 10
          command: |
            bash -c "
            set -ex
            bash tests/utils/wait_for_local_port.bash 4802 60"
          logfiles:
            warp10:
              filename: "/artifacts/warp10.log"
              follow: true
      - ShellCommand:
          name: run v2 functional tests
          command: SETUP_CMD="run start_v2:server" bash ./eve/workers/unit_and_feature_tests/run_ft_tests.bash true ft_test:v2
          env:
            UTAPI_CACHE_BACKEND: redis
          logfiles:
            warp10:
              filename: "/artifacts/warp10.log"
              follow: true
            utapi:
              filename: "/artifacts/setup_ft_test:v2.log"
              follow: true
      - Upload: *upload_artifacts
