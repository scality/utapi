---
name: tests

on:
  push:
    branches-ignore:
    - 'development/**'

jobs:
  build-ci:
    uses: ./.github/workflows/build-ci.yaml

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        lfs: true
    - uses: actions/setup-node@v2
      with:
        node-version: '16.13.2'
        cache: yarn
    - name: install dependencies
      run: yarn install --frozen-lockfile --network-concurrency 1
    - name: run static analysis tools on markdown
      run: yarn run lint_md
    - name: run static analysis tools on code
      run: yarn run lint

  tests-v1:
    needs:
      - build-ci
    runs-on: ubuntu-latest
    env:
      REINDEX_PYTHON_INTERPRETER: python3
    name: ${{ matrix.test.name }}
    strategy:
      fail-fast: false
      matrix:
        test:
        - name: run unit tests
          command: yarn test
          env:
            UTAPI_METRICS_ENABLED: 'true'
        - name: run v1 client tests
          command: bash ./.github/scripts/run_ft_tests.bash false ft_test:client
          env: {}
        - name: run v1 server tests
          command: bash ./.github/scripts/run_ft_tests.bash false ft_test:server
          env: {}
        - name: run v1 cron tests
          command: bash ./.github/scripts/run_ft_tests.bash false ft_test:cron
          env: {}
        - name: run v1 interval tests
          command: bash ./.github/scripts/run_ft_tests.bash true ft_test:interval
          env: {}
    services:
      redis:
        image: ghcr.io/${{ github.repository }}/redis-ci:${{ github.sha }}
        ports:
        - 6379:6379
        - 9121:9121
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis-replica:
        image: ghcr.io/${{ github.repository }}/redis-replica-ci:${{ github.sha }}
        ports:
        - 6380:6380
        options: >-
          --health-cmd "redis-cli -p 6380 ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis-sentinel:
        image: bitnami/redis-sentinel:6.2
        env:
          REDIS_MASTER_SET: scality-s3
          REDIS_SENTINEL_PORT_NUMBER: '16379'
          REDIS_SENTINEL_QUORUM: '1'
        ports:
        - 16379:16379
        options: >-
          --health-cmd "redis-cli -p 16379 ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      warp10:
        image: ghcr.io/${{ github.repository }}/warp10-ci:${{ github.sha }}
        env:
          standalone.port: '4802'
          warpscript.maxops: '10000000'
          ENABLE_SENSISION: 't'
        options: >-
          --health-cmd "curl localhost:4802/api/v0/check"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
          --health-start-period 60s
        ports:
        - 4802:4802
        - 8082:8082
        - 9718:9718

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        lfs: true
    - uses: actions/setup-node@v4
      with:
        node-version: '16.13.2'
        cache: yarn
    - uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: pip
    - name: Install python deps
      run: pip install -r requirements.txt
    - name: install dependencies
      run: yarn install --frozen-lockfile --network-concurrency 1
    - name: ${{ matrix.test.name }}
      run: ${{ matrix.test.command }}
      env: ${{ matrix.test.env }}

  tests-v2-with-vault:
    needs:
      - build-ci
    runs-on: ubuntu-latest
    env:
      REINDEX_PYTHON_INTERPRETER: python3
    services:
      redis:
        image: ghcr.io/${{ github.repository }}/redis-ci:${{ github.sha }}
        ports:
        - 6379:6379
        - 9121:9121
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis-replica:
        image: ghcr.io/${{ github.repository }}/redis-replica-ci:${{ github.sha }}
        ports:
        - 6380:6380
        options: >-
          --health-cmd "redis-cli -p 6380 ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis-sentinel:
        image: bitnami/redis-sentinel:6.2
        env:
          REDIS_MASTER_SET: scality-s3
          REDIS_SENTINEL_PORT_NUMBER: '16379'
          REDIS_SENTINEL_QUORUM: '1'
        ports:
        - 16379:16379
        options: >-
          --health-cmd "redis-cli -p 16379 ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      warp10:
        image: ghcr.io/${{ github.repository }}/warp10-ci:${{ github.sha }}
        env:
          standalone.port: '4802'
          warpscript.maxops: '10000000'
          ENABLE_SENSISION: 't'
        ports:
        - 4802:4802
        - 8082:8082
        - 9718:9718
        options: >-
          --health-cmd "curl localhost:4802/api/v0/check"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
          --health-start-period 60s
      vault:
        image: ghcr.io/${{ github.repository }}/vault-ci:${{ github.sha }}
        ports:
        - 8500:8500
        - 8600:8600
        - 8700:8700
        - 8800:8800
        options: >-
          --health-cmd "curl http://localhost:8500/_/healthcheck"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '16.13.2'
        cache: 'yarn'
    - uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: pip
    - name: Install python deps
      run: pip install -r requirements.txt
    - name: install dependencies
      run: yarn install --frozen-lockfile --network-concurrency 1
    - name: Wait for warp10 a little bit
      run: sleep 60
    - name: ${{ matrix.test.name }}
      run: ${{ matrix.test.command }}
      env: ${{ matrix.test.env }}
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: failure()
